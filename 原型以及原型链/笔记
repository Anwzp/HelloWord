什么是原型？
原型是JavaScript中prototype属性指向的对象为原型，原型是在调用函数时创建的与之关联的另一个对象，并且每一个对象都会从
中继承属性，每个函数的prototype属性都指向原型（可以认为prototype是一个指针）

原型就是当你创建一个构造函数时，浏览器会自动创建一个与之想关联的对象，并且你创建出来的对象的prototype属性是
指向这个对象的，prototype指向的这个对象就叫做原型。
使用原型的好处：
让所有对象实例共享他所包含的方法和属性，通过该构造函数生成的实例所拥有的方法都是指向一个函数的索引，达到节省内存的目的

什么是原型链？
原型链式当在一个对象中查找一个属性时，会先从自己的实例中查找如果查找不到则会去原型中查找原型中再没则去原型的原型中查找，
直到查到Object然后查找到null（null没有原型）这样就形成了原型链。
原型链的劣势：
1.通过引用实例改变原型中本来的值，也会影响到其他的实例
2.在创建子类实例时，不可以在不影响所有对象实例的情况下给超类传递参数
注意点：
prototype是构造函数才有的属性
_proto_属性会指向该对象的原型
_proto_是一个非标准的属性，只是部分浏览器实现了此属性，他对应的标准属性是[[Prototype]]